// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "10/23/2016 19:17:04"

// 
// Device: Altera 5M40ZM64C4 Package MBGA64
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module inversor (
	out,
	in);
output 	[3:0] out;
input 	[3:0] in;

// Design Ports Information
// out[3]	=>  Location: PIN_H8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// out[2]	=>  Location: PIN_G8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// out[1]	=>  Location: PIN_A2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// out[0]	=>  Location: PIN_A6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// in[3]	=>  Location: PIN_B7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// in[2]	=>  Location: PIN_C8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// in[1]	=>  Location: PIN_G7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// in[0]	=>  Location: PIN_A8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire [3:0] \in~combout ;


// Location: PIN_B7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \in[3]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\in~combout [3]),
	.padio(in[3]));
// synopsys translate_off
defparam \in[3]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_C8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \in[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\in~combout [2]),
	.padio(in[2]));
// synopsys translate_off
defparam \in[2]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_G7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \in[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\in~combout [1]),
	.padio(in[1]));
// synopsys translate_off
defparam \in[1]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_A8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \in[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\in~combout [0]),
	.padio(in[0]));
// synopsys translate_off
defparam \in[0]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_H8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \out[3]~I (
	.datain(!\in~combout [3]),
	.oe(vcc),
	.combout(),
	.padio(out[3]));
// synopsys translate_off
defparam \out[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_G8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \out[2]~I (
	.datain(!\in~combout [2]),
	.oe(vcc),
	.combout(),
	.padio(out[2]));
// synopsys translate_off
defparam \out[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_A2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \out[1]~I (
	.datain(!\in~combout [1]),
	.oe(vcc),
	.combout(),
	.padio(out[1]));
// synopsys translate_off
defparam \out[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_A6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \out[0]~I (
	.datain(!\in~combout [0]),
	.oe(vcc),
	.combout(),
	.padio(out[0]));
// synopsys translate_off
defparam \out[0]~I .operation_mode = "output";
// synopsys translate_on

endmodule
